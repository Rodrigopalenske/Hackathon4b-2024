'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import './dashboard.css'; // Estilos centralizados

export default function Home() {
  const router = useRouter();
  const [showNotifications, setShowNotifications] = useState(false);
  const [notifications] = useState([
    { id: 1, message: 'Bem-vindo √† plataforma!' },
    { id: 2, message: 'Atualiza√ß√£o do sistema dispon√≠vel.' },
    { id: 3, message: 'Novo recurso de seguran√ßa ativado.' },
  ]);

  // Simula√ß√£o de autentica√ß√£o (substitua com a l√≥gica real)
  const isAuthenticated = typeof window !== 'undefined' && localStorage.getItem('auth_token');

  useEffect(() => {
    if (!isAuthenticated) {
      router.push('/login'); // Redireciona para login se n√£o estiver autenticado
    }
  }, [isAuthenticated, router]);

  const toggleNotifications = () => {
    setShowNotifications(!showNotifications);
  };

  return (
    <div className="dashboard-container">
      <h1 className="dashboard-title">P√°gina Inicial</h1>
      <p>Bem-vindo √† p√°gina inicial! Voc√™ est√° autenticado e pode acessar o conte√∫do.</p>

      {/* Bot√£o de notifica√ß√µes com √≠cone */}
      <button className="notification-button" onClick={toggleNotifications}>
        <span className="notification-icon">üîî</span> {/* √çcone de sino */}
      </button>

      {/* Lista de notifica√ß√µes */}
      {showNotifications && (
        <div className="notification-box">
          {notifications.length > 0 ? (
            <ul className="notification-list">
              {notifications.map((notification) => (
                <li key={notification.id} className="notification-item">
                  {notification.message}
                </li>
              ))}
            </ul>
          ) : (
            <p className="notification-empty">Nenhuma notifica√ß√£o no momento.</p>
          )}
        </div>
      )}
    </div>
  );
}
