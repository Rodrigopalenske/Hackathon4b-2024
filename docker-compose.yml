version: '3.8'

networks:
  laravel_enviroment:

services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/apache.dockerfile
    ports:
      - 8000:80
    volumes:
      - ./api-laravel:/var/www/html
    depends_on:
      - php
      - redis
      - app-next
      - mysql
      - mailhog
    container_name: laravel_enviroment_server
    networks:
      - laravel_enviroment

  app-next:
    build:
      context: .
      dockerfile: dockerFiles/next.dockerfile
    container_name: nextjs_enviroment
    ports:
      - "3000:3000"
    volumes:
      - ./app-next:/scr
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev
    depends_on:
      - php
    restart: always

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./api-laravel:/var/www/html:delegated
    container_name: php_laravel_enviroment
    networks:
      - laravel_enviroment

  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: mysql_laravel_enviroment
    env_file:
      - mysql/.env
    ports:
      - 3306:3306
    networks:
      - laravel_enviroment
    volumes:
      - /opt/mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    container_name: phpmyadmin_laravel_enviroment
    depends_on:
      - mysql
    ports:
      - '8891:80'
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=secret
    networks:
      - laravel_enviroment

  redis:
    image: redis:alpine
    container_name: redis_laravel_enviroment
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel_enviroment
    command: redis-server --appendonly yes --replica-read-only no

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./api-laravel:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_enviroment

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./api-laravel:/var/www/html
    entrypoint: ["/usr/local/bin/wait-for-it.sh", "mysql:3306", "--", "php", "/var/www/html/artisan", "migrate:refresh"]
    networks:
      - laravel_enviroment

  scheduler:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: scheduler_laravel_enviroment
    volumes:
      - ./api-laravel:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    networks:
      - laravel_enviroment

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_laravel_enviroment
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel_enviroment
